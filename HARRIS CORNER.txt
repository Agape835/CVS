from google.colab import files
uploaded = files.upload()

import cv2
import numpy as np
from matplotlib import pyplot as plt
from google.colab import files


# Load the uploaded image
filename = 'chessboard.png'  # Change this to the name of the uploaded file
img = cv2.imread(filename)
if img is None:
    raise FileNotFoundError(f"Image not found: {filename}")

# Convert the image to grayscale
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# Detect corners using the Harris Corner detection method
gray = np.float32(gray)
dst = cv2.cornerHarris(gray, 2, 3, 0.04)

# Dilate the result for marking the corners
dst = cv2.dilate(dst, None)

# Threshold for an optimal value; it may vary depending on the image
img[dst > 0.01 * dst.max()] = [0, 0, 255]

# Convert images for Matplotlib display
original_img_rgb = cv2.cvtColor(cv2.imread(filename), cv2.COLOR_BGR2RGB)
detected_img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# Display the images side by side using Matplotlib
plt.figure(figsize=(20, 10))  # Adjust the figure size as needed

# Original image
plt.subplot(1, 2, 1)
plt.imshow(original_img_rgb)
plt.title('Original Image')
plt.axis('off')

# Image with detected corners
plt.subplot(1, 2, 2)
plt.imshow(detected_img_rgb)
plt.title('Harris Corner Detection')
plt.axis('off')

plt.show()
